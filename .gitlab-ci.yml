# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/


before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  #- virtualenv --clear venv
  - source venv/bin/activate
  - pip3 install poetry
  - cd $CI_PROJECT_DIR/opentps_core
  - poetry install --no-root # install dependencies
  - apt-get update && apt-get install -y libgl1 # For PyQt5
  #- apt-get install -y '^libxcb.*-dev' # For PyQt5
  - cd $CI_PROJECT_DIR/opentps_gui
  - poetry install --no-root # install dependencies

build:
  image: python:3.9
  script:
    - export PYTHONPATH="$PWD/opentps_core:$PWD/opentps_gui"
    - cd $CI_PROJECT_DIR/opentps_core
    - poetry build
    - cd $CI_PROJECT_DIR/opentps_gui
    - poetry build
    #- pip install dist/*
  artifacts:
    paths:
      - dist/*.whl

# TODO: Should tests be executed on the built application
test_core:
  image: python:3.9
  script:
    - cd $CI_PROJECT_DIR/
    - export PYTHONPATH="$CI_PROJECT_DIR/opentps_core:$CI_PROJECT_DIR/opentps_gui"
    - python3 CI/tests.py

test_gui:
  image: python:3.9
  script:
    - cd $CI_PROJECT_DIR/
    - export PYTHONPATH="$CI_PROJECT_DIR/opentps_core:$CI_PROJECT_DIR/opentps_gui"
    - export QT_QPA_PLATFORM=offscreen
    - python -m unittest discover opentps_gui/opentps/gui

docs:
  script:
    - pip install sphinx sphinx-rtd-theme
    #- export PYTHONPATH="$CI_PROJECT_DIR"
    #- python3 docs/tools/version_utils.py
    #- cd docs
    #- make html
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Must be run after all script because we create __init__.py for unittest. The absence of this file is essential and tested in test_core.
unittest_core:
  image: python:3.9
  script:
    - cd $CI_PROJECT_DIR/
    - export PYTHONPATH="$CI_PROJECT_DIR/opentps_core"
    - cd $CI_PROJECT_DIR/opentps_core/
    - touch opentps/__init__.py # because unittests does not work on namespace package
    - touch __init__.py # because unittests does not work on namespace package
    - python3 -m unittest discover opentps
